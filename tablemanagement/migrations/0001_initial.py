# Generated by Django 5.0.2 on 2024-02-28 05:14

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='addUserExcel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excelFile', models.FileField(upload_to='uploads/')),
            ],
        ),
        migrations.CreateModel(
            name='arrears',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CIRData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empId', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='jobDescriptionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='jobType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='userRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='companyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyName', models.CharField(max_length=100)),
                ('companyDescription', models.TextField(null=True)),
                ('jobDescription', models.TextField(null=True)),
                ('CGPA_Required', models.FloatField(null=True)),
                ('CTC', models.CharField(max_length=20)),
                ('serviceAgreement', models.CharField(max_length=30, null=True)),
                ('trainingPeriodandStipend', models.TextField(null=True)),
                ('workLocation', models.CharField(max_length=100, null=True)),
                ('evalationProcess', models.TextField(null=True)),
                ('lastDate', models.DateField(null=True)),
                ('markTenth', models.IntegerField(null=True)),
                ('markTwelfth', models.IntegerField(null=True)),
                ('batch', models.IntegerField(null=True)),
                ('historyOfArrears', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='historyofarrearscompany', to='tablemanagement.arrears')),
                ('maxCurrentArrears', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maxcurrentarrearscompany', to='tablemanagement.arrears')),
                ('eligibleDepartments', models.ManyToManyField(null=True, to='tablemanagement.department')),
                ('jobRole', models.ManyToManyField(null=True, to='tablemanagement.jobdescriptionmodel')),
                ('jobType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobtype', to='tablemanagement.jobtype')),
                ('qualification', models.ManyToManyField(null=True, to='tablemanagement.qualification')),
            ],
        ),
        migrations.CreateModel(
            name='studentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rollNo', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('CGPA', models.FloatField()),
                ('markTenth', models.IntegerField(null=True)),
                ('markTwelfth', models.IntegerField(null=True)),
                ('batch', models.IntegerField(null=True)),
                ('arrear_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrears_history', to='tablemanagement.arrears')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='tablemanagement.department')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gender', to='tablemanagement.gender')),
                ('historyOfArrears', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='historyofarrearsstudent', to='tablemanagement.arrears')),
                ('maxCurrentArrears', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maxcurrentarrearsstudent', to='tablemanagement.arrears')),
                ('standing_Arrears', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrears_standing', to='tablemanagement.arrears')),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_permissions', to='auth.permission')),
                ('roles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userRole', to='tablemanagement.userroles')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
